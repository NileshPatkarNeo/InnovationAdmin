@model Innovation_Admin.UI.Models.Template.TemplateDto

@{
    ViewData["Title"] = "EditTemplate";
    Layout = "~/Views/Shared/_AdminHomePage.cshtml";
}

<style>
    h1.text-center {
        margin-bottom: 20px;
    }

    hr {
        margin-bottom: 20px;
    }

    .form-group {
        margin-bottom: 1rem;
    }

    .btn {
        display: inline-flex;
        align-items: center;
        margin: 5px;
    }

    .form-group label .text-danger {
        font-weight: bold;
    }

    .form-box {
        border: 1px solid #ccc;
        border-radius: 10px;
        padding: 20px;
        margin-top: 20px;
    }
</style>

<h1 class="text-center">Edit Template</h1>

<div class="row justify-content-center">
    <div class="col-md-6">
        <div class="form-box">
            <form id="editTemplateForm" asp-action="EditTemplate" class="w-100" enctype="multipart/form-data" novalidate>
                <div class="text-danger">
                    @if (ViewData.ModelState.ErrorCount > 0)
                    {
                        <div class="alert alert-danger">
                            <p>Please fix the errors below:</p>
                            <ul>
                                @foreach (var error in ViewData.ModelState.Values.SelectMany(v => v.Errors))
                                {
                                    <li>@error.ErrorMessage</li>
                                }
                            </ul>
                        </div>
                    }
                </div>

                <div class="form-group mb-3" style="display:none">
                    <label asp-for="ID" class="control-label"></label>
                    <input asp-for="ID" class="form-control" />
                    <span asp-validation-for="ID" class="text-danger"></span>
                </div>
                <div class="form-group mb-3">
                    <label asp-for="Name" class="control-label">
                        @Html.DisplayNameFor(model => model.Name) <span class="text-danger">*</span>
                    </label>
                    <input asp-for="Name" class="form-control" maxlength="51" required id="Name" onkeypress="return onlyAlphabets(event,this);" />
                    <span asp-validation-for="Name" class="text-danger"></span>
                    <span class="text-danger" id="Name_error"></span>
                </div>
                @Html.HiddenFor(x => x.PdfTemplateFile)
                <div class="form-group mb-3">
                    <label asp-for="PdfFile" class="control-label">
                        @Html.DisplayNameFor(model => model.PdfFile) <span class="text-danger">*</span>
                    </label>
                    <div>
                        @if (!string.IsNullOrEmpty(Model.PdfTemplateFile))
                        {
                            <p>Current File: @Model.PdfTemplateFile</p>
                            <input type="checkbox" id="keepCurrentPdf" name="keepCurrentPdf" value="true" checked>
                            <label for="keepCurrentPdf">Keep current PDF</label>
                        }
                        <input type="file" asp-for="PdfFile" class="form-control" maxlength="201" id="PdfFile" />
                        <span class="text-danger" id="PdfFile_error"></span>
                    </div>
                </div>

                <div class="form-group mb-3">
                    <label asp-for="Domain" class="control-label">
                        @Html.DisplayNameFor(model => model.Domain) <span class="text-danger">*</span>
                    </label>
                    <input asp-for="Domain" class="form-control" maxlength="51" required id="Domain" onkeypress="return onlyAlphabets(event,this);" />
                    <span asp-validation-for="Domain" class="text-danger"></span>
                    <span class="text-danger" id="Domain_error"></span>
                </div>
              @*   <div class="form-group mb-3">
                    <label asp-for="Size" class="control-label">
                        @Html.DisplayNameFor(model => model.Size) <span class="text-danger">*</span>
                    </label>
                    <input asp-for="Size" class="form-control" maxlength="51" required id="Size" onkeypress="return onlyAlphabets(event,this);" />
                    <span asp-validation-for="Size" class="text-danger"></span>
                    <span class="text-danger" id="Size_error"></span>
                </div> *@
                <div class="form-group mb-3 d-flex justify-content-center">
                    <div>
                        <input type="submit" value="Save" class="btn btn-primary" />
                    </div>
                    <div>
                        <a asp-action="Templates" class="btn btn-secondary">Back</a>
                    </div>
                </div>
            </form>
        </div>
    </div>
</div>

 <script>
    function onlyAlphabets(e, t) {
        try {
            var charCode = (e.which) ? e.which : window.event.keyCode;
            if ((charCode > 64 && charCode < 91) ||
                (charCode > 96 && charCode < 123) ||
                charCode === 32) {
                return true;
            } else {
                return false;
            }
        } catch (err) {
            alert(err.Description);
        }
    }

    document.getElementById("editTemplateForm").addEventListener("submit", function (event) {
        let isValid = true;

        const nameInput = document.getElementById("Name");
        const nameError = document.getElementById("Name_error");
        nameError.textContent = "";
        if (nameInput.value.trim() === "") {
            nameError.textContent = "Name is required.";
            isValid = false;
        } else if (nameInput.value.length > 50) {
            nameError.textContent = "Name cannot exceed 50 characters.";
            isValid = false;
        }

      

            const pdfFileInput = document.getElementById("PdfFile");
            const pdfFileError = document.getElementById("PdfFile_error");
            pdfFileError.textContent = "";
            if (!pdfFileInput.files.length && !document.getElementById("keepCurrentPdf").checked)
            {
                pdfFileError.textContent = "PDF File is required if not keeping the current one.";
                isValid = false;
            }
        else if (!keepCurrentPdfCheckbox.checked && pdfFileInput.files[0].size > 5242880)
           { 
            pdfFileError.textContent = "PDF File size cannot exceed 5MB.";
            isValid = false;
            }



        const domainInput = document.getElementById("Domain");
        const domainError = document.getElementById("Domain_error");
        domainError.textContent = "";
        if (domainInput.value.trim() === "") {
            domainError.textContent = "Domain is required.";
            isValid = false;
        } else if (domainInput.value.length > 50) {
            domainError.textContent = "Domain cannot exceed 50 characters.";
            isValid = false;
        }

        const sizeInput = document.getElementById("Size");
        const sizeError = document.getElementById("Size_error");
        sizeError.textContent = "";
        if (sizeInput.value.trim() === "") {
            sizeError.textContent = "Size is required.";
            isValid = false;
        } else if (sizeInput.value.length > 50) {
            sizeError.textContent = "Size cannot exceed 50 characters.";
            isValid = false;
        }

        if (!isValid) {
            event.preventDefault();
        }
    });

    document.getElementById("Name").addEventListener("input", function () {
        document.getElementById("Name_error").textContent = "";
    });

    document.getElementById("PdfTemplateFile").addEventListener("input", function () {
        document.getElementById("PdfTemplateFile_error").textContent = "";
    });

    document.getElementById("Domain").addEventListener("input", function () {
        document.getElementById("Domain_error").textContent = "";
    });

    document.getElementById("Size").addEventListener("input", function () {
        document.getElementById("Size_error").textContent = "";
    });
</script>
